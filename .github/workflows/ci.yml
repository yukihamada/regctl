name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: edge/workers/package-lock.json
    
    - name: Install Go dependencies
      run: go mod download
    
    - name: Install Node dependencies
      working-directory: ./edge/workers
      run: npm ci
    
    - name: Run Go tests
      run: |
        cd cmd/regctl
        go test -v ./...
    
    - name: Run Go linting
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        working-directory: cmd/regctl
    
    - name: Run TypeScript linting
      working-directory: ./edge/workers
      run: npm run lint
    
    - name: Run TypeScript tests
      working-directory: ./edge/workers
      run: npm test
    
    - name: Build CLI
      run: |
        cd cmd/regctl
        go build -v .
    
    - name: Build Workers
      working-directory: ./edge/workers
      run: npm run build

  build-release:
    needs: test
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
          - os: linux
            arch: arm64
          - os: darwin
            arch: amd64
          - os: darwin
            arch: arm64
          - os: windows
            arch: amd64
            ext: .exe
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
    
    - name: Build binary
      env:
        GOOS: ${{ matrix.os }}
        GOARCH: ${{ matrix.arch }}
      run: |
        cd cmd/regctl
        go build -ldflags "-X main.version=${GITHUB_REF#refs/tags/} -X main.buildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
          -o ../../dist/regctl-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: regctl-${{ matrix.os }}-${{ matrix.arch }}
        path: dist/regctl-*

  release:
    needs: build-release
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        path: dist/
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/**/*
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}